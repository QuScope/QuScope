repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: debug-statements
      - id: no-commit-to-branch
        args: ['--branch', 'main', '--branch', 'master']
        stages: [commit]
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3.11

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ["--max-line-length=88", "--extend-ignore=E203,W503"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: ["--ignore-missing-imports"]

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-r", "src/"]
        exclude: tests/

  - repo: local
    hooks:
      - id: check-branch-name
        name: Check branch name
        entry: bash
        language: system
        args:
          - -c
          - |
            branch=$(git rev-parse --abbrev-ref HEAD)
            if [[ ! "$branch" =~ ^(feature|bugfix|hotfix|release)\/[a-z0-9-]+$ ]] && [[ "$branch" != "develop" ]] && [[ "$branch" != "main" ]]; then
              echo "Branch name '$branch' does not follow naming convention:"
              echo "  - feature/description"
              echo "  - bugfix/description"
              echo "  - hotfix/description"
              echo "  - release/version"
              echo "  - develop"
              echo "  - main"
              exit 1
            fi
        stages: [commit]
        always_run: true
        pass_filenames: false
      
      - id: check-commit-message
        name: Check commit message format
        entry: bash
        language: system
        args:
          - -c
          - |
            commit_regex='^(feat|fix|docs|style|refactor|test|chore|ci|perf|build|revert)(\(.+\))?: .{1,50}'
            if ! grep -qE "$commit_regex" "$1"; then
              echo "Commit message does not follow conventional format:"
              echo "  type(scope): description"
              echo "  "
              echo "Types: feat, fix, docs, style, refactor, test, chore, ci, perf, build, revert"
              echo "Example: feat(quantum): add new microscopy algorithm"
              exit 1
            fi
        stages: [commit-msg]
        
      - id: pytest
        name: pytest
        entry: pytest
        language: system
        types: [python]
        pass_filenames: false
        always_run: true
        args: ["tests/", "--cov=src", "--cov-fail-under=80"]
